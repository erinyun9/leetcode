Single Number

Given an array of integers, every element appears twice except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

class Solution {
public:
    int singleNumber(int A[], int n) {
        unordered_map<int, int> mapping;
        for(int i=0;i<n;i++){
            mapping[A[i]]=0;
        }
        for(int i=0;i<n;i++){
            mapping[A[i]]++;
        } 
        for ( auto it = mapping.begin(); it != mapping.end(); ++it )
        {
            if(it->second==1)
                return it->first;
        }
        return -1;

            
    }
};