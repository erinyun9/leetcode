Path Sum II

Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.

For example:
Given the below binary tree and sum = 22,
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \    / \
        7    2  5   1
return
[
   [5,4,11,2],
   [5,8,4,5]
]


/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int> > pathSum(TreeNode *root, int sum) 
    {
        vector<vector<int>> result;
        vector<int> path;
        pathSum(root, sum, path,result);
        return result;
        
    }
    void pathSum(TreeNode *root, int gap, vector<int> &path, vector<vector<int>> &result)
    {
        if(root==nullptr)
            return;
        path.push_back(root->val);
        if(root->right==nullptr && root->left==nullptr)
            if(gap==root->val)
                result.push_back(path);
        pathSum(root->right,gap-root->val,path,result);
        pathSum(root->left,gap-root->val,path,result);
        path.pop_back();
    }
};